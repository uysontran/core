{"version":3,"file":"static/js/6932.ded310fd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_assertThisInitialized","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","_getPrototypeOf","o","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_superPropBase","object","property","hasOwnProperty","_get","get","receiver","base","desc","getOwnPropertyDescriptor","_construct","Parent","args","Class","a","push","Function","bind","_wrapNativeSuper","_cache","Map","undefined","fn","toString","indexOf","has","set","Wrapper","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","split","readAsDataURL","supportsBinary","isView","buffer","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","window","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","_createForOfIteratorHelper","allowArrayLike","it","isArray","unsupportedIterableToArray","F","s","n","done","_e","f","normalCompletion","didErr","step","next","_e2","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}