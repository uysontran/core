{"version":3,"file":"static/js/7715.a2ef8da2.chunk.js","mappings":"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","sources":["pages/Task/DataCollection.js","pages/Task/TaskDetail.js","webpack://ms-ui/./src/pages/Task/DataCollection.module.scss?277a","pages/Task/TaskDetail.module.scss"],"sourcesContent":["import { useDevicesInfo, useTask } from \"hooks\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport Table from \"components/Tables\";\nimport { useState } from \"react\";\nimport TaskDetail from \"./TaskDetail\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./DataCollection.module.scss\";\nimport NewTask from \"./NewTask\";\nexport default function DataCollection() {\n  const [select, setSelect] = useState([]);\n  const tasks = useTask(null);\n  const devices = useDevicesInfo(null);\n  const [open, setOpen] = useState(false);\n  const [channels, setChannels] = useState(null);\n  const [newTask, setNewTask] = useState(false);\n  const tableHead = [\n    {\n      id: \"id\",\n      numberic: false,\n      label: \"taskID\",\n    },\n    {\n      id: \"device\",\n      numberic: false,\n      label: \"Device Name\",\n    },\n    {\n      id: \"type\",\n      numberic: false,\n      label: \"Task ID\",\n    },\n    {\n      id: \"interval\",\n      numberic: true,\n      label: \"Interval\",\n    },\n    {\n      id: \"channels\",\n      numberic: false,\n      isSort: false,\n      label: \"Channels\",\n    },\n    {\n      id: \"delete\",\n      numberic: false,\n      isSort: false,\n      label: \"\",\n    },\n  ];\n  const tableBody = (tasks?.data || []).map((task, index) => {\n    return {\n      id: {\n        value: task.id,\n        key: task.id,\n      },\n      device: {\n        value: (devices?.data ? devices?.data : []).find(\n          (e) => e.id === task.DeviceID\n        )?.name,\n        key: (devices?.data ? devices?.data : []).find(\n          (e) => e.id === task.DeviceID\n        )?.name,\n      },\n      type: {\n        value: task.scheduleType,\n        key: task.scheduleType,\n      },\n      interval: {\n        value: task.interval,\n        key: task.interval,\n      },\n      channels: {\n        value: (\n          <BsInfoCircle\n            onClick={() => {\n              setOpen(true);\n              setChannels(task);\n            }}\n          />\n        ),\n        key: task.id,\n      },\n      delete: {\n        value: <AiOutlineDelete size={25} />,\n        key: task.id,\n      },\n    };\n  });\n  return (\n    <div className={style.container}>\n      <div className={style.buttonHolder}>\n        <div className={style.createButton} onClick={() => setNewTask(true)}>\n          + Create\n        </div>\n      </div>\n      <Table head={tableHead} select={[select, setSelect]} data={tableBody} />\n      {tasks !== null && (\n        <TaskDetail\n          data={channels}\n          open={open}\n          onClose={() => setOpen(false)}\n        />\n      )}\n      <NewTask open={newTask} onClose={() => setNewTask(false)} />\n    </div>\n  );\n}\n","import Popup from \"reactjs-popup\";\nimport { useState } from \"react\";\nimport style from \"./TaskDetail.module.scss\";\nimport Table from \"components/Tables\";\nimport { useDevicesInfo, useModelsInfo } from \"hooks\";\nexport default function TaskDetail({ trigger, data, open = false, onClose }) {\n  const [select, setSelect] = useState([]);\n  const devices = useDevicesInfo();\n  const models = useModelsInfo();\n  function isNumber(value) {\n    return typeof value === \"number\" && isFinite(value);\n  }\n  const device = (devices?.data ? devices.data : []).find(\n    (e) => e?.id === data?.DeviceID\n  );\n  const model = (models?.data ? models.data : []).find(\n    (e) => e?.id === device?.ModelID\n  );\n  const channels = (model?.ModelChannels || [])\n    .filter((channel) =>\n      data.ReadDeviceData.some((e) => e?.ChannelID === channel.id)\n    )\n    .map((e) => ({ ...e }));\n\n  const tableHead = channels.length\n    ? Object.keys(channels[0]).map((e) => ({\n        id: e,\n        numberic: isNumber(channels[0][e]),\n        label: e,\n      }))\n    : [];\n  const tableBody = channels.map((channel) =>\n    Object.keys(channel).reduce(\n      (object, value) => ({\n        ...object,\n        [value]: { value: channel[value], key: channel[value] },\n      }),\n      {}\n    )\n  );\n  return (\n    <Popup\n      trigger={trigger}\n      modal\n      contentStyle={{ backgroundColor: \"white\", borderRadius: \"20px\" }}\n      open={open}\n      onClose={onClose}\n    >\n      {(close) => (\n        <div className={style.container}>\n          <Table\n            head={tableHead}\n            select={[select, setSelect]}\n            data={tableBody}\n            // classes={{\n            //   head: { name: style.head, default: true },\n            // }}\n          />\n          <div onClick={() => close()} className={style.footer}>\n            Close\n          </div>\n        </div>\n      )}\n    </Popup>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DataCollection_container__fqjwh\",\"buttonHolder\":\"DataCollection_buttonHolder__KoIWC\",\"createButton\":\"DataCollection_createButton__eu7iu\"};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["DataCollection","useState","select","setSelect","tasks","useTask","devices","useDevicesInfo","open","setOpen","channels","setChannels","newTask","setNewTask","tableBody","data","map","task","index","id","value","key","device","find","e","DeviceID","name","type","scheduleType","interval","onClick","delete","size","className","style","head","numberic","label","isSort","onClose","TaskDetail","trigger","models","useModelsInfo","model","ModelID","ModelChannels","filter","channel","ReadDeviceData","some","ChannelID","tableHead","length","Object","keys","isFinite","reduce","object","modal","contentStyle","backgroundColor","borderRadius","close"],"sourceRoot":""}